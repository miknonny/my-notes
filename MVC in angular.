MVC in angular.

Model = Javascript objects.

$scope.files = ['foo', 'bar', 'baz'];

View = HTML

<div ng-repeat="f in files"></div>

controller = Plain Javascript code.
The controller maps the relation between the ui and the model

function addfile (filename) {
	$scope.files.push(fileName);
}


note that in angular everything runs in the client. We just talk to the server to get the data that the application need.

THE DOM.
-data binding and directives.

Databinding.
This allows us to set up the model and the view in thesame way that we setup
spreadshits. i.e when we make changes to once cell. those changes are automatically reflected on another cell.

lets look at the following example.

<!doctype html>

<html ng-app>   <!-- this is the application root -->
	<head>
		<script src="angular.min.js"></script>
	</head>

	<body>
		<div>
			<label>Name:</label> <input type="text" ng-model="your name" placeholder="Enter your name">
			<hr>
			<h1>Hello {{your name}}!</h1>
		</div>
	</body>
What this means is that you want to insert some text here{{your namae}} from a model element. in this case ng-model="your name".
such that once some body changes the input it is automatically reflected on the page. This is called databinding.

Directives.
This are bits of code in our html that expands to do something more.
example

<div class='data-picker'
	<div>
		<div>
			...

this will wxpand to show a complete date for us to work with.




Basic controller.
This are ways to associate models with ui.

Basic controller example.


html
<div ng-app="app" ng-controller="ctrl">
	{{message}}
<div>

javascript.
angular.module('app', [])
	.controller('ctrl', function ($scope) {
		$scope.message = "You are as great as your actions.";
	});	

This is a very brief introduction. there are lot more.

Dependency Injection.
server Communication.
Internationalization.
form validation.
Views and routes.
Mocks and unit testing support.
Scenario test runner.

If  you are learninging to write code you can check out our youtube channel.

you can checkout the built with. to checkout apps that where builtwith with angular. also also see apps that support animations in angular.

To get a deep understanding we have a developer documentation.
here we take you through all the components of angular, how we do model view controller etc. how databinding is done. All this is covered here.

There is also a set of Api docs.
where you can read about the differnt api.

there is also  a blog. blog.angualar.org
This is whre to look for updates or announcement.
where we will be and when we are gonna do releases.

if you got qtns there is a really vibrant community. on google groups.

Check out the angualar express for restful service.



Brian built Youtube app for ps4.

Now lets build a shopping cart with angular.

brian works us throught the processs of scaffolding a new angular app.

Making a simple shoping cart.
Things to be included in the shopping cart.
1. it has a listing of different items.
2. you select different items and it shows you how much the different items cost.
note that every time you remove an angular sub-genrator from disk you also need to remove it from test/specification.

now if we run 

$ yo serve.

It compiles all our stuff together and opens up a brower.
Note that this will watch our file for changes. and immediately refresh our page to reflect those changes.

Now we need  a service where we can get our catalogue items from.
lets create one using angular by running the following command.

$ yo anglar:service catalog

This creates a file in app/scripts/service/angular.js

This link is also included in your index.html file.

If we look at the index.html file we can see the file together with app.js and main.js. during build these three files are minified and concatenated together to one file.




































 